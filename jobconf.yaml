###
### EXAMPLE_SCHEDULED_JOB:
###   status: 1  <- 0/1, If 1, this job is active.
###   commands:  <- PATH of the script you want to run.
###   execution:
###     immediate:  <- true/false. If True, it is executed immediately.
###     event_type: time
### .   detail:
###       when:       <- time: crontab format,
###   options: <- Optional options
###     $OPTION: $VALUE
###
### EXAMPLE_WATCHDOG_JOB:
###   # Run modified in ./ -> python ./example.py --message 'Procman! thi...'
###   status: 1  <- 0/1, If 1, this job is active.
###   commands:  <- PATH of the script you want to run.
###   execution:
###     immediate: false
###     event_type: file
###     detail:
###       path:
###       recursive: true/false
###       handler:
###         name: EventHandler name
###       when:
###         - "moved"
###         - "deleted"
###         - "created"
###         - "modified"
###         - "closed"
###   options:
###     $OPTION: $VALUE

example_time_trigger_process_1:
  # Run every minute. -> "python ./example.py --message 'Procman! thi...'"
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: true
    event_type: time
    detail:
      when: "*/1 * * * *"
  options:
    --message: Procman! This process runs every minute.

example_time_trigger_process_2:
  # Run every 2 minutes. -> "python ./example.py --message 'Procman! thi...'"
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: true
    event_type: time
    detail:
      when: "*/2 * * * *"
  options:
    --message: Procman! This process runs every 2 minutes.

example_time_trigger_process_3:
  # Run every 2 minutes. But inactive.
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: true
    event_type: time
    detail:
      when: "*/2 * * * *"
  options:
    --message: Procman! This process runs every 2 minutes.

example_time_trigger_process_4:
  # Run every 1 minutes. -> "echo 'Hello Procaman! This...'"
  status: 1
  commands:
    - echo
    - Hello Procman! このプロセスは毎分ターミナル上で実行されます.
  execution:
    immediate: false
    event_type: time
    detail:
      when: "*/1 * * * *"

example_file_trigger_process_1:
  # Run modified in ./ -> python ./example.py --message 'Procman! thi...'
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: false
    event_type: file
    detail:
      path: ./
      recursive: false
      handler:
        name: LoggingEventHandler
      when:
        # - "moved"
        # - "deleted"
        - "created"
        - "modified"
        # - "closed"
  options:
    --message: Procman! This process runs when file created in observing dir.

example_file_trigger_process_2:
  # Run modified in ./sandbox/*.(txt|csv) -> python ./example.py --message 'Procman! thi...'
  status: 1
  commands:
    - echo
    - detected file change in observing dir.
  execution:
    immediate: false
    event_type: file
    detail:
      path: ./sandbox
      recursive: false
      handler:
        name: PatternMatchingEventHandler
        args:
          patterns:
            - "*.py"
            - "*.csv"
      when:
        # - "moved"
        # - "deleted"
        - "created"
        - "modified"
        # - "closed"
