###
### EXAMPLE_VANILLA_TASK:
###   status: 1  <- 0/1, If 1, this job is active.
###   commands:  <- PATH of the script you want to run.
###   execution:
###     immediate:  <- true/false. If True, it is executed immediately.
###     event_type: null
###   options: <- Optional options
###     $OPTION: $VALUE
###
### EXAMPLE_SCHEDULED_TASK:
###   status: 1  <- 0/1, If 1, this job is active.
###   commands:  <- PATH of the script you want to run.
###   execution:
###     immediate:  <- true/false. If True, it is executed immediately.
###     event_type: time
### .   detail:
###       when:       <- time: crontab format,
###   options: <- Optional options
###     $OPTION: $VALUE
###
### EXAMPLE_WATCHDOG_TASK:
###   # Run modified in ./ -> python ./example.py --message "Taskick! thi..."
###   status: 1  <- 0/1, If 1, this job is active.
###   commands:  <- PATH of the script you want to run.
###   execution:
###     immediate: false
###     event_type: file
###     detail:
###       path:
###       recursive: true/false
###       handler:
###         name: EventHandler name
###       when:
###         - moved
###         - deleted
###         - created
###         - modified
###         - closed
###   options:
###     $OPTION: $VALUE

example_task_1:
  # Only run first time. -> "echo "Hello Taskick!""
  status: 1
  commands:
    - echo
    - $(date) Hello Taskick! Working in $HOME
  execution:
    event_type: null

example_task_1:
  # Only run first time. But inactive
  status: 0
  commands:
    - echo $(date) Hello Taskick! Working in $HOME
  execution:
    event_type: null

example_time_trigger_task_1:
  # Run immediately and every 2 minutes. -> "python ./example.py --message "Taskick! thi...""
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: true
    event_type: time
    detail:
      when: "*/2 * * * *"
  options:
    --message: Taskick! This task runs every 2 minutes.

example_time_trigger_task_2:
  # Run every 2 minutes. -> "python ./example.py --message "Taskick! thi...""
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: false
    event_type: time
    detail:
      when: "*/2 * * * *"
  options:
    --message: Taskick! This task runs every 2 minutes.

example_file_trigger_task_1:
  # Run modified in ./*.(txt|csv) using PatternMatchingEventHandler -> echo "detected ..."
  status: 1
  commands:
    - echo
    - detected file change in observing dir.
  execution:
    immediate: false
    event_type: file
    detail:
      path: ./
      handler:
        name: LoggingEventHandler
      recursive: false
      when:
        - modified

example_file_trigger_task_2:
  # Run modified in ./ using LoggingEventHandler -> python ./example.py --message "Taskick! thi..."
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: false
    event_type: file
    detail:
      path: ./sandbox
      recursive: false
      handler:
        name: PatternMatchingEventHandler
        args:
          patterns:
            - "*.csv"
      when:
        - created
        - modified
  options:
    --message: Taskick! This task runs when file created in observing dir.

example_file_trigger_task_3:
  # Run modified in ./sandbox/*.(txt|csv) -> echo "detected ..."
  status: 1
  commands:
    - python
    - ./example.py
  execution:
    immediate: false
    event_type: file
    propagate: true
    detail:
      path: ./sandbox
      recursive: false
      handler:
        name: PatternMatchingEventHandler
        args:
          patterns:
            - "*.py"
      when:
        - moved
        - modified
